swagger: "2.0"
info:
  description: "Esta API permite llevar a cabo el funcionamiento de una página de alquiler de películas on-line, basada en la Base de Datos Sakila"
  version: "1.0.0"
  title: "Películas Sakila"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "rentaSakila"
basePath: "/v2"
tags:
- name: "film"
  description: "Todo sobre las películas almacenadas en la Base de Datos"
- name: "costumer"
  description: "Todo sobre los clientes nuevos"
schemes:
- "https"
- "http"


paths:
  /film/{countryId}:
    get:
      tags:
      - "film"
      summary: "Obtiene las películas segun el país"
      description: "Retorna las películas según el país seleccionado para la renta"
      operationId: "findFilmsByCountry"
      produces:
      - "application/json"
      parameters:
      - name: "countryId"
        in: "path"
        description: "ID del pais de la tienda de renta"
        required: true
        type: "integer"
        enum:
          - 8
          - 20
      responses:
        "200":
          description: "Peliculas obtenidas"
          schema:
            $ref: "#/definitions/Film"
        "400":
          description: "Error en la obtención de películas"

  /film/findByParameters:
    get:
      tags:
      - "film"
      summary: "Obtiene las películas segun el título y/o el actor"
      description: "Retorna las películas según el parametro de búsqueda, sea: título, actor o ambos "
      operationId: "findByParameters"
      produces:
      - "application/json"
      parameters:
      - name: "title"
        in: "query"
        description: "El titulo de la película con la cual se filtra"
        required: false
        type: "string"
      - name: "actor"
        in: "query"
        description: "El actor con el cual se filtra las películas"
        required: false
        type: "string"
      responses:
        "200":
          description: "Peliculas obtenidas"
          schema:
            $ref: "#/definitions/Film"
        "404":
          description: "Peliculas no encontradas"
          
  /film/rental/addFilm:
    post:
      tags:
      - "film"
      summary: "Añadir nueva película al carrito del cliente"
      operationId: "addFilm"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Información de la pelicula por añadir"
        required: true
        schema:
          $ref: "#/definitions/Film"
      responses:
        "200":
          description: "La película fue añadida exitosamente"
        "405":
          description: "No se permite añadir esta película"

  /film/rental/deleteFilm/{filmID}:
    delete:
      tags:
      - "film"
      summary: "Elimina una película del carrito"
      operationId: "deleteFilm"
      consumes:
        - "application/json"
      parameters:
      - name: "filmId"
        in: "path"
        description: "ID de la película a quitar del carrito"
        required: true
        type: "integer"
      responses:
          "200":
            description: "Película eliminada del carrito"
          "400":
            description: "La película no puede ser eliminada del carrito"

  /costumer:
    post:
      tags:
      - "costumer"
      summary: "Añadir nuevo cliente"
      description: "Agregar un nuevo cliente según el país seleccionado"
      operationId: "addCostumer"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Información de registro de cliente"
        required: true
        schema:
          $ref: "#/definitions/Costumer"
      responses:
        "200":
          description: "Registro exitoso"
        "405":
          description: "Error en registro"

  /costumer/payment/address:
    get:
      tags:
      - "costumer"
      summary: "Retorna la dirección"
      description: "Retorna la direccion de envío actual del cliente"
      operationId: "GetAddress"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Dirección obtenida"
          schema:
            $ref: "#/definitions/Address"
        "404":
          description: "Dirección no encontrada"
    put:
      tags:
      - "costumer"
      summary: "Modificar la dirección de envío"
      operationId: "updateAddress"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Información de la nueva dirección"
        required: true
        schema:
          $ref: "#/definitions/Address"
      responses:
        "200":
          description: "Modificación exitosa"
        "405":
          description: "Error en Modificación"

  /costumer/payment/email:
    get:
      tags:
      - "costumer"
      summary: "Retorna el email"
      description: "Retorna el email del cliente"
      operationId: "GetEmail"
      responses:
        "200":
          description: "Email obtenido"
          schema:
            type: object
            properties:
              email:
                type: "string"
        "404":
          description: "Email no encontrado"
  
  /costumer/payment:
    post:
      tags:
      - "costumer"
      summary: "Insertar nuevo pago"
      description: "una vez confirmado el pago se lo inserta en la base de datos."
      operationId: "addPayment"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Información de del pago y renta"
        required: true
        schema:
          $ref: "#/definitions/Payment"
      responses:
        "200":
          description: "Pago exito"
        "405":
          description: "Error en registro"
    

definitions:
  Film:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      title:
        type: "string"
      description:
        type: "string"
      status:
        type: "string"
        description: "Estado de la película"
        enum:
        - "libre"
        - "rentado"
      imageUrls:
        type: "string" 
      last_update:
        type: "string"
        format: "date-time"
      return_date:
        type: "string"
        format: "date-time"
      cost:
        type: "integer"
        format: "double"
  Costumer:
    type: object
    properties:
      first_name:
        type: "string"
      last_name: 
        type: "string"
      email:
        type: "string"
      Address:
        $ref: "#/definitions/Address"
      active:
        type: "integer"
        default: 1
      create_date:
        type: "string"
        format: "date-time"
      last_update:
        type: "string"
        format: "date-time"
  Address:
    type: object
    properties:
      address:
        type: "string"
      address2:
        type: "string"
      district:
        type: "string"
      postal_code:
        type: "string"
      phone:
        type: "string"
      location:
        type: "string"
      last_update:
        type: "string"
        format: "date-time"

  Payment:
    type: object
    properties:
      Film:
       $ref: "#/definitions/Film"
      return_date:
        type: "string"
        format: "date-time"
      send_address:
        $ref: "#/definitions/Address"
      total:
        type: "integer"
        format: "double"
      descuento:
        type: "integer"
        format: "double"

  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
